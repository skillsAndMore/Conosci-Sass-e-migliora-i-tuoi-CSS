//1. Primo Esperimento con if
$var: true;

.classe{
    @if $var{
        background: none;
    } @else {
        background-color: #F00;
    }    
}


//2. Condizione con if
$a: 2;
$b: 4;

#uguale{
    @if $a == $b{
        margin: 10px auto
    } @else {
        margin: 0
    }    
}

#diverso{
    @if $a != $b{
        padding: 10px
    } @else {
        padding: 0
    }
}

@if $b > $a{
    #maggiore{
        color: #0F0;
    }    
} @else {
    #minore{
        color: #000;
    }
}

//3. Esempio Ciclo for
$passi: 5;

@for $i from 1 to $passi{
    .grid_#{$i}{
        padding-left: 10px + $i;
    }
}

//4. Esempio cn through
$passi: 5;

@for $i from 1 through $passi{
    .grid_#{$i}{
        padding-left: 10px + $i;
    }
}

//5. Base Griglia
//Variabili
$width: 960px;
$gutter: 20px;
$columns: 12;
$column_width: $width / $column;

//Griglia
body {
  min-width: $width;
}

.container {
  margin-left: auto;
  margin-right: auto;
  width: $width;
}

%grid{
    display: inline;
    float: left;
    margin-left: $gutter / 2;
    margin-right: $gutter / 2;
}

//6. Costruisco le Colonne
@for $i from 1 through $columns{
    
    .grid_#{$i}{
        @extend %grid;
        width: $i * $column_width - $gutter;
    }

}

//7. Inserisco prefix e suffix
.prefix_#{$i}{
    padding-left: $i * $column_width;
}

.suffix_#{$i}{
    padding-right: $i * $column_width;
}

//8. Inserisco push e pull
%relative{
    position: relative;
}

.push_#{$i}{
    @extend %relative;
    left: $i * $column_width;
}

.pull_#{$i}{
    @extend %relative;
    left: -$i * $column_width;
}

//8. Variabili di Configurazione
@if $prefix == true{
    .prefix_#{$i}{
        padding-left: $i * $column_width;
    }

    .suffix_#{$i}{
        padding-right: $i * $column_width;
    }    
}

@if $push == true{
    .push_#{$i}{
        @extend %relative;
        left: $i * $column_width;
    }

    .pull_#{$i}{
        @extend %relative;
        left: -$i * $column_width;
    }    
}

$prefix: true !default;
$push: true !default;

//9. Mixin Base Griglia
@mixin grid_base(
    $columns: 12,
    $width: 960px,
    $gutter: 20px,
    $prefix: true,
    $push: true
){
    $column_width: $width / $columns;

    body {
      min-width: $width;
    }

    %grid{
        display: inline;
        float: left;
        margin-left: $gutter / 2;
        margin-right: $gutter / 2;
    }

    %relative{
        position: relative;
    }   
}

//10. Genero Mixin Griglia
@mixin generate_grid(
    $columns: 12,
    $width: 960px,
    $gutter: 20px,
    $prefix: true,
    $push: true
){
    $column_width: $width / $columns;


    @for $i from 1 through $columns{
    
        .grid_#{$i}{
            @extend %grid;
            width: $i * $column_width - $gutter;    
        }

        @if $prefix == true{
            .prefix_#{$i}{
                padding-left: $i * $column_width;
            }

            .suffix_#{$i}{
                padding-right: $i * $column_width;
            }    
        }

        @if $push == true{
            .push_#{$i}{
                @extend %relative;
                left: $i * $column_width;
            }

            .pull_#{$i}{
                @extend %relative;
                left: -$i * $column_width;
            }    
        }
        
    }
}

//11. Aggiunta Contenitore
$container_name: container_#{$columns};
 
.#{$container_name} {
  margin-left: auto;
  margin-right: auto;
  width: $width;
}

//12. Sistemo nomi Contenitore
@mixin generate_grid(
    $columns: 12,
    $width: 960px,
    $gutter: 20px,
    $prefix: true,
    $push: true
){
    $column_width: $width / $columns;

    $container_name: container_#{$columns};
 
    .#{$container_name} {
      margin-left: auto;
      margin-right: auto;
      width: $width;
    }

    @for $i from 1 through $columns{
    
        .grid_#{$i}{
            @extend %grid;
            .#{$container_name} &{
                width: $i * $column_width - $gutter;    
            }
        }
        .#{$container_name} {
            @if $prefix == true{
                .prefix_#{$i}{
                    padding-left: $i * $column_width;
                }

                .suffix_#{$i}{
                    padding-right: $i * $column_width;
                }    
            }
        }

        @if $push == true{
            .push_#{$i}{
                @extend %relative;
                .#{$container_name} &{
                    left: $i * $column_width;
                }
            }

            .pull_#{$i}{
                @extend %relative;
                .#{$container_name} &{
                    left: -$i * $column_width;
                }
            }    
        }
        
    }
}

//Griglia Completa
//Griglia
@mixin grid_base(
    $columns: 12,
    $width: 960px,
    $gutter: 20px,
    $prefix: true,
    $push: true
){
    @include generate_grid(
        $columns,
        $width,
        $gutter,
        $prefix,
        $push
    );
    $column_width: $width / $columns;

    body {
      min-width: $width;
    }

    %grid{
        display: inline;
        float: left;
        margin-left: $gutter / 2;
        margin-right: $gutter / 2;
    }

    %relative{
        position: relative;
    }

    
}

//Loop
@mixin generate_grid(
    $columns: 12,
    $width: 960px,
    $gutter: 20px,
    $prefix: true,
    $push: true
){
    $column_width: $width / $columns;

    $container_name: container_#{$columns};
 
    .#{$container_name} {
      margin-left: auto;
      margin-right: auto;
      width: $width;
    }

    @for $i from 1 through $columns{
    
        .grid_#{$i}{
            @extend %grid;
            .#{$container_name} &{
                width: $i * $column_width - $gutter;    
            }
        }
        .#{$container_name} {
            @if $prefix == true{
                .prefix_#{$i}{
                    padding-left: $i * $column_width;
                }

                .suffix_#{$i}{
                    padding-right: $i * $column_width;
                }    
            }
        }

        @if $push == true{
            .push_#{$i}{
                @extend %relative;
                .#{$container_name} &{
                    left: $i * $column_width;
                }
            }

            .pull_#{$i}{
                @extend %relative;
                .#{$container_name} &{
                    left: -$i * $column_width;
                }
            }    
        }
        
    }
}

